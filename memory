https://blog.csdn.net/carson_ho/article/details/79549417
http://www.ruanyifeng.com/blog/2016/12/user_space_vs_kernel_space.html
adb shell top
800%cpu   2%user   0%nice  52%sys 721%idle  25%iow   0%irq   0%sirq   0%host
CPU在各个点的消耗时间
us（user） cpu消耗在user space的时间百分比
sy（sys）  cpu消耗在kernel space的时间百分比
ni（nice） cpu消耗在niceness进程（低优先级）的时间百分比
id（idle） cpu消耗在闲置进程的时间百分比，值越低，CPU越忙
wa（iow）  cpu等待外部I/0的时间百分比，这段时间CPU不能执行其他任务，也没执行运算，值太高说明外部设备有问题
hi（irq）  cpu响应硬件中断请求的时间百分比
si（sirq） cpu响应软件中断请求的时间百分比


time 可以查看单个程序消耗的时间
time mkdir a.file
TYE100:/system/bin # time mkdir a.file
time mkdir a.file
    0m00.14s real     0m00.03s user     0m00.04s system
real :程序从开始到结束的全部时间，用户能感知到的时间，包括CPU切换去执行其他任务的时间
user :程序在user space执行的时间
sys  :程序在kernel space执行的时间
usrr和sys之和一般情况下小于real。

内存问题：内存泄露，内存抖动，图片bitmap相关，代码质量&数量，日常不正确使用

内存泄露（ML）:程序在申请内存后，在该内存不需再使用时，没有释放，最终因为程序的内存超出了系统为其分配的内存，从而导致内存溢出（OOM）
android的内存管理=内存分配 + 内存回收（包含堆和进程），包括3个层次：application framework Dalvik虚拟机 linux内核
进程优先级： 前台进程，可见进程，服务进程，后台进程，空进程，linux内核回收进程，评分在adj中
常见内存泄露原因
集合类
Static关键字修饰的成员变量
非静态内部类 / 匿名类
资源对象使用后未关闭
工具:Memory Monitor

bitmpa
图片资源非常消耗内存，使用图片后立即释放，根据分辨率适配&缩放图片，按需选择合适的解码方式（ARGB_4444，ARGB_8888，RGB_555，ALPHA_8），设置图片缓存

内存抖动
频繁的分配内存，回收内存，大量临时的小对象频繁创建，会导致内存碎片过多，导致后续分配内存时，虽有总体剩余内存但是不连续，无法分配
垃圾收集器(GC)频繁回收内存会导致卡顿，甚至内存溢出（OOM）

代码原因：
代码本身的质量(如数据结构，数据类型等)&数量（代码量大小）可能会导致大量的内存问题，如占用内存大，内存利用率低等
枚举占用内存大，去除无用的代码，少使用常驻的service 进程十分占用内存，尽量少使用


sd卡问题：
JB2之前的版本只支持SD2.0 SPEC，SD2.0 SPEC定义了最大支持SD卡容量到32G。
   2，JB2及以后的版本支持SD3.0 SPEC，SD3.0的SPEC定义了最大支持SD卡容量到2T。
   3，超过32G涉及到兼容性问题如下：
      1）在linux上format超过32G的卡是FAT32, android/Linux支持。但是Windows系统，只要超过32G，会
      强制变成exFAT.但是原生Android/Linux不支持exFat.
   2）如果客户拿一张64GB的卡, 到我们平台format --> ok, 变成FAT32。但如果先拿到windows系统format--->not ok,因为变成exFAT.
   3）因为windows的这方面的限制，目前是无解的，所以超过32G会有兼容性的问题。所以我们建议32G，这样可以保证没有兼容性的问题，
   但是超过32G，就会存在上述使用上的兼容性问题，请自行取舍

